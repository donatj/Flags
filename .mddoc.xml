<mddoc>
	<docpage target="README.md" autoloader="psr0" autoloader-root="src">
		<section title="Flags">
			<badge-poser type="version" />
			<badge-poser type="downloads" />
			<badge-poser type="license" />
			<badge-github-action name="donatj/Flags" workflow-file="ci.yml" />
			<text><![CDATA[
Flags is an argument parser inspired by the Go-lang [Flag](http://golang.org/pkg/flag/#Parsed) package, taking its methodology but attaching a **GNU-style** flag parser.

---

Flags supports the following style of parameters:

Long-Flags  
`--key=value` / `--key value`

Short-Flags  
`-v`

GNU Style Multi-Short-Flags  
`-Xasd`

Multiple of the Same Short-Flag  
`-vvv`

As well as the ` -- ` operator for absolute separation of arguments from options.]]></text>
			<section title="Requirements">
				<composer-requires/>
			</section>
			<section title="Installing">
				<composer-install/>
			</section>
			<section title="Example">
				<text>Here is a simple example script:</text>
				<source name="example/example.php" lang="php" />
				<text><![CDATA[The by-reference `= &` allows the value to be updated from the *default* to the argument value once the `parse()` method has been triggered. This is inspired by the Go Flag packages use of pointers]]></text>
				<source><![CDATA[bash-3.2$ php example/example.php
Expected option --qux missing.
        -v   verbosity
     --foo   Enable the foo
     --bar   [uint] Number of bars
     --baz   [string] What to name the baz
     --qux   <bool>]]>
				</source>
			</section>
			<section title="Documentation">
				<file name="src/Flags.php" />
			</section>
		</section>
	</docpage>
</mddoc>
